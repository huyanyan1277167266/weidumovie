apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.bw.movie"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "arm64-v8a", "x86_64"
        }
    }
    greendao {
        schemaVersion 1//数据库版本号，必须依次增大，用来判断数据库版本，是否需要更新
        daoPackage 'com.bw.movie.dao'// 是 GreenDao 自动生成文件所在的路径，设置DaoMaster、DaoSession、Dao包名
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    signingConfigs {
        release {
            keyAlias 'bw_movie'
            keyPassword 'y199028y'
            storeFile file('D:\\demo\\Wechat\\app\\movie.keystore')
            storePassword 'y199028y'
        }
        dubug {
            keyAlias 'bw_movie'
            keyPassword 'y199028y'
            storeFile file('D:\\demo\\Wechat\\app\\movie.keystore')
            storePassword 'y199028y'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}
//以下是配合recyclerview使用的
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1' //这里改为你项目使用的版本即可
            }
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //gson解析
    implementation 'com.google.code.gson:gson:2.4'

//glide的依赖
    implementation 'com.github.bumptech.glide:glide:4.9.0'

//头部标签的依赖
    implementation 'com.android.support:design:29.0.0'
    implementation 'com.github.xiaohaibin:XBanner:androidx_v1.0.4'
    // 下面是recyclerview依赖
//noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    //ok依赖
    implementation 'com.squareup.okhttp3:okhttp:3.2.0'
    //ok 日志的拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    //butterknife依赖
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
//eventbus依赖
    implementation 'org.greenrobot:eventbus:3.1.1'
    //retorfit依赖
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'//导入retrofit
    implementation 'com.google.code.gson:gson:2.6.2'//Gson 库
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.x.y'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'//转换器，请求结果转换成Model
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'//配合Rxjava 使用
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.facebook.fresco:fresco:1.12.1'
    implementation 'com.jaeger.statusbarutil:library:1.5.1'
    implementation 'org.greenrobot:greendao:3.2.2'
    //定位
    implementation 'com.amap.api:map2d:latest.integration'
    implementation 'com.amap.api:search:latest.integration'
    implementation 'com.amap.api:location:latest.integration'
}
